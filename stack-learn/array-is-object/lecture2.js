//  @Title - Copy Array Element
const arr = [1, 2, 3, 4];
// Using For Loop

// Copy
const arr2 = arr;
arr2.push(5);
// console.log(arr, arr2); // [ 1, 2, 3, 4, 5 ] [ 1, 2, 3, 4, 5 ] to catch referrence

// Spread Operator (Shoallow Copy)
const arr3 = [...arr, 6];
// console.log(arr, arr3);

// üîπ Shallow Copy
// ‡¶è‡¶ï‡¶ü‡¶ø shallow copy ‡¶ï‡ßã‡¶®‡ßã ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶¨‡¶æ ‡¶°‡¶æ‡¶ü‡¶æ‡¶∏‡ßá‡¶ü‡ßá‡¶∞ ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ references ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ nested objects (‡¶Ö‡¶≠‡ßç‡¶Ø‡¶®‡ßç‡¶§‡¶∞‡ßÄ‡¶£ ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü) ‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶Ü‡¶∏‡¶≤ ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶∏ ‡¶ß‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡ßá‡•§ ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé, ‡¶Ø‡¶¶‡¶ø ‡¶Æ‡ßÇ‡¶≤ ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡ßá‡¶∞ ‡¶ï‡ßã‡¶®‡ßã ‡¶Ö‡¶≠‡ßç‡¶Ø‡¶®‡ßç‡¶§‡¶∞‡ßÄ‡¶£ ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º, ‡¶§‡¶æ‡¶π‡¶≤‡ßá shallow copy ‡¶ï‡¶∞‡¶æ ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡ßá‡¶ì ‡¶∏‡ßá‡¶á ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá‡•§

let obj1 = { name: "Alice", address: { city: "Dhaka" } };
let obj2 = { ...obj1 }; // Shallow copy

obj2.name = "Bob";
obj2.address.city = "Chittagong";

console.log(obj1); // { name: 'Alice', address: { city: 'Chittagong' } }
console.log(obj2); // { name: 'Bob', address: { city: 'Chittagong' } }
